{"pageProps":{"postData":{"id":"using-overflow-ellipsis-in-inline-flex","htmlContent":"<p><a href=\"http://www.westerndevs.com/bios/dave_paquette/\">Dave Paquette</a>, a fellow Western Dev, hit a strange CSS snag the other day. He wanted to use the <code>text-overflow: ellipsis</code> on a flexbox item that displayed text, where the ellipsis would show up if the text was too long.</p>\n<p>It didn't work as expected, but after some digging, a solution was discovered. This post exists to document both the problem and solution with the hope that it prevents future headaches for other CSS developers.</p>\n<h2>The Problem</h2>\n<p>His code went something like this:</p>\n<pre><code class=\"language-html\">&#x3C;ul>\n  &#x3C;li class=\"item\">\n    &#x3C;i>Icon&#x3C;/i>\n    &#x3C;span>Item Code 321&#x3C;/span>\n    &#x3C;span>Descriptive Text&#x3C;/span>\n  &#x3C;/li>\n  &#x3C;li class=\"item\">\n    &#x3C;i>Icon&#x3C;/i>\n    &#x3C;span>Item Code that is way too long and shoud use ellipsis&#x3C;/span>\n    &#x3C;span>Descriptive Text&#x3C;/span>\n  &#x3C;/li>\n  &#x3C;li class=\"item\">\n    &#x3C;i>Icon&#x3C;/i>\n    &#x3C;span>Item Code 123&#x3C;/span>\n    &#x3C;span>Descriptive Text&#x3C;/span>\n  &#x3C;/li>\n&#x3C;/ul>\n</code></pre>\n<pre><code class=\"language-css\">li span {\n  display: inline-flex;\n}\n\n.item span {\n  width: 100px;\n  margin-left: 1em;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n</code></pre>\n<p>The goal here is to have all the <code>&#x3C;span></code> elements line up, regardless of their contents. If their contents exceed the length of the <code>&#x3C;span></code> then should display an ellipsis.</p>\n<p>This isn't the case.</p>\n<p>Instead, you get something like this:</p>\n<p>{% asset_img broken-result.png \"Not quite right\" %}</p>\n<p>We have everything aligned, but no ellipsis. Why?</p>\n<h2>The Solution</h2>\n<p>It turns out that this is the expected behaviour (see \"But Why?\" section below).</p>\n<p>The solution is to make sure that we apply the <code>text-overflow</code> property to a block element that lives inside a flex item. In our case, we need to wrap the text we want to have the ellipsis show up in a block element.</p>\n<p>The working code looks like this:</p>\n<pre><code class=\"language-html\">&#x3C;ul>\n  &#x3C;li class=\"item\">\n    &#x3C;i>Icon&#x3C;/i>\n    &#x3C;span>\n        &#x3C;div>\n          Item Code 321\n        &#x3C;/div>\n    &#x3C;/span>\n    &#x3C;span>Descriptive Text&#x3C;/span>\n  &#x3C;/li>\n  &#x3C;li class=\"item\">\n    &#x3C;i>Icon&#x3C;/i>\n    &#x3C;span>\n        &#x3C;div>\n          Item Code that is way too long and shoud use ellipsis\n        &#x3C;/div>\n    &#x3C;/span>\n    &#x3C;span>Descriptive Text&#x3C;/span>\n  &#x3C;/li>\n  &#x3C;li class=\"item\">\n    &#x3C;i>Icon&#x3C;/i>\n    &#x3C;span>\n        &#x3C;div>\n          Item Code 123\n        &#x3C;/div>\n    &#x3C;/span>\n    &#x3C;span>Descriptive Text&#x3C;/span>\n  &#x3C;/li>\n&#x3C;/ul>\n</code></pre>\n<pre><code class=\"language-css\">.item span {\n  display: inline-flex;\n}\n\n.item span {\n  width: 100px;\n  margin-left: 1em;\n  white-space: nowrap;\n}\n\n.item span div {\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n</code></pre>\n<p>The <code>&#x3C;div></code> we introduce is a block element that lives inside of the flex item. Now the <code>text-overflow</code> property applies, and all is good!</p>\n<p>{% asset_img working-result.png \"It Works!\" %}</p>\n<h3>The Solution in Action</h3>\n<p>In case you want to see the end result working, here you can check it out <a href=\"https://jsfiddle.net/davidwesst/fhkt9mco/5/embed/html,css,result\">here</a>.</p>\n<script async src=\"https://jsfiddle.net/davidwesst/fhkt9mco/5/embed/html,css,result/\"></script>\n<h2>But Why?</h2>\n<p>I'll try and explain this, but be aware that I'm likely oversimplifying things.</p>\n<p>As I mentioned before, this whole issue is expected behaviour. If you look at <a href=\"https://drafts.csswg.org/css-ui/#text-overflow\">the spec</a> for, <code>text-overflow</code> you find the definition you see in the quote below</p>\n<p>This property specifies rendering when inline content overflows its line box edge in the inline progression direction of its block container element (\"the block\") that has overflow other than visible.</p>\n<p>It turns out <code>text-overflow</code> isn't meant to work on flex items, rather it is meant to work on block items as per the spec.</p>\n<p>That being said, so what? I mean, can't the spec be adjusted to include <code>text-overflow</code> on flex items? Although you would think it's not a big deal to make this work for flex-items too, there are a number of considerations that need to be taken into account. More specifically, how flexbox works.</p>\n<p>It turns out that there really isn't a clean way to do this. If you're wondering how I came to that conclusion you can stop because I didn't. Those responsible for the specification did, and you can read the full conversation that started with a <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=912434\">Mozilla bug report</a> and leads to a whole <a href=\"http://lists.w3.org/Archives/Public/www-style/2013Sep/0070.html\">mail group discussion</a> about why it should (or, in this case, should not) be implemented as part of the spec.</p>\n<p>And that, ladies and gentlemen, is how you get <code>text-overflow</code> working on flex items. You don't. :)</p>\n","layout":"post","title":"Using text-overflow:ellipsis with Inline Flex","categories":["css"],"date":"Mon Feb 29 2016 09:58:40 GMT-0600 (Central Standard Time)","tags":["html","css","flexbox"],"excerpt":"Two out of three Dave's hit this obscure CSS problem that turned out to be expected behaviour. David Wesst walks us through the reason why and how to fix it.","authorId":"david_wesst","originalurl":"http://www.webnotwar.ca/opensource/using-text-overflowellipsis-with-inline-flex/"}},"__N_SSG":true}