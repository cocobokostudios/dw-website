<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on David Wesst</title>
    <link>https://davidwesst.com/categories/javascript/</link>
    <description>Recent content in JavaScript on David Wesst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Mar 2017 09:47:22 +0000</lastBuildDate>
    
	<atom:link href="https://davidwesst.com/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Compile TypeScript into a Single File with SystemJS Modules with Gulp</title>
      <link>https://davidwesst.com/blog/how-to-compile-typescript-into-a-single-file-with-systemjs-modules-with-gulp/</link>
      <pubDate>Tue, 14 Mar 2017 09:47:22 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/how-to-compile-typescript-into-a-single-file-with-systemjs-modules-with-gulp/</guid>
      <description>I&amp;rsquo;ve been messing around with TypeScript again for my game project and wanted a module loader to consume the single file produced by the TypeScript compiler. This time around I decided to use SystemJS and figured I&amp;rsquo;d share the lessons I learned along the way.
Sample Project If you&amp;rsquo;re interested in playing with the code, you can checkout this GitHub project I setup just for that reason.
Previous Post I also posted about doing the same sort of thing with AMD and RequireJS complete with a GitHub sample project</description>
    </item>
    
    <item>
      <title>Initial Thoughts on Using Phaser</title>
      <link>https://davidwesst.com/blog/new-post-initial-thoughts-on-phaser/</link>
      <pubDate>Tue, 07 Mar 2017 06:00:00 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/new-post-initial-thoughts-on-phaser/</guid>
      <description>I&amp;rsquo;m not a game dev, but have always wanted to make a video game. I&amp;rsquo;ve started and stopped so many project over the years, that I have seriously lost count.
With the new year and a fresh mind, I decided to take a stab at it again, this time focusing on just getting something done rather than getting something done right as a sort of side project.
It&amp;rsquo;s been about two months since I&amp;rsquo;ve started, and I have something basic working (although I&amp;rsquo;m not willing to share it yet) and I thought I would share my thoughts on Phaser, the framework I decided to use to help me build my game.</description>
    </item>
    
    <item>
      <title>How to Fix node-gyp Error on Windows</title>
      <link>https://davidwesst.com/blog/how-to-fix-node-gyp-error-on-windows/</link>
      <pubDate>Mon, 26 Sep 2016 14:51:56 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/how-to-fix-node-gyp-error-on-windows/</guid>
      <description>I hit this problem once or twice a year and always seem to forget how easy it is to fix the problem. This blog post will ensure that not only I remember, but the entire Internet will remember the solution I use.
Here goes.
The Problem The problem is simple: You pull down a repository that uses NPM for package management onto your Windows machine, you type npm install and you get something like this:</description>
    </item>
    
    <item>
      <title>How to Build ReactJS with Gulp</title>
      <link>https://davidwesst.com/blog/how-to-build-reactjs-with-gulp/</link>
      <pubDate>Mon, 19 Sep 2016 19:55:48 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/how-to-build-reactjs-with-gulp/</guid>
      <description>I wanted to play with ReactJS last week and figured I would just add another gulp talk to my build process, being that it&amp;rsquo;s all the rage right now.
It turns out that it wasn&amp;rsquo;t that simple, as it turns out that the gulp-react has been &amp;ldquo;deprecated in favor of gulp-babel&amp;rdquo;. I hadn&amp;rsquo;t planned on learning Babel, but it turns out it wasn&amp;rsquo;t very difficult once I was able to put all the pieces together.</description>
    </item>
    
    <item>
      <title>JavaScript Framework or JavaScript Core (Part 2)</title>
      <link>https://davidwesst.com/blog/javascript-framework-or-javascript-core-part-2/</link>
      <pubDate>Mon, 22 Feb 2016 15:34:46 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/javascript-framework-or-javascript-core-part-2/</guid>
      <description>A friend and I decided to make a video game using JavaScript.
When deciding on whether or not to use a JavaScript game framework I went with Phaser, and Chris opted to go with pure JavaScript.
We were both right.
In this series of posts, I want to explain how each of us answer the question: Should I use a JavaScript Framework or pure JavaScript?
This is part 2 of 2 in the series.</description>
    </item>
    
    <item>
      <title>JavaScript Framework or JavaScript Core (Part 1)</title>
      <link>https://davidwesst.com/blog/javascript-framework-or-javascript-core-part-1/</link>
      <pubDate>Tue, 16 Feb 2016 15:34:46 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/javascript-framework-or-javascript-core-part-1/</guid>
      <description>A friend and I decided to make a video game using JavaScript.
When deciding on whether or not to use a JavaScript game framework I went with Phaser, and Chris opted to go with pure JavaScript.
We were both right.
In this series of posts, I want to explain how each of us answer the question: Should I use a JavaScript Framework or pure JavaScript?
This is part 1 of 2 in the series.</description>
    </item>
    
    <item>
      <title>Exploring JavaScript Game Frameworks</title>
      <link>https://davidwesst.com/blog/exploring-javascript-game-frameworks/</link>
      <pubDate>Mon, 08 Feb 2016 16:11:44 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/exploring-javascript-game-frameworks/</guid>
      <description>Last month I explored a number of JavaScript-based game frameworks in an attempt to pick the perfect one for my first game.
I thought I&amp;rsquo;d take a moment to share four of them that really stood out to me, along with a few honerable mentions.
Note that I&amp;rsquo;ve left a bunch off the list, as that is the nature of a &amp;ldquo;top X&amp;rdquo; list. If I missed your favourite one, then feel free to let me know in the comments!</description>
    </item>
    
    <item>
      <title>Why ChakraCore OSS is Important</title>
      <link>https://davidwesst.com/blog/why-chakracore-oss-is-important/</link>
      <pubDate>Thu, 14 Jan 2016 14:43:33 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/why-chakracore-oss-is-important/</guid>
      <description>Chakra is the new JavaScript engine developed by Microsoft, which was first released as part of the, no longer supported Internet Explorer 9. This isn&amp;rsquo;t a post about why Microsoft having more open source software (OSS) processes and projects is important, or how it is &amp;ldquo;amazing&amp;rdquo; that they are turning a new leaf.
This post answers the question that I don&amp;rsquo;t see people asking: why is having a OSS JavaScript engine important to anyone?</description>
    </item>
    
  </channel>
</rss>