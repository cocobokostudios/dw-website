<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on David Wesst</title>
    <link>https://davidwesst.com/categories/development/</link>
    <description>Recent content in Development on David Wesst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Mar 2018 13:10:00 +0000</lastBuildDate>
    
	<atom:link href="https://davidwesst.com/categories/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>F12 Chooser is a Dev Tool Thing</title>
      <link>https://davidwesst.com/blog/f12-chooser-is-dev-tool-thing/</link>
      <pubDate>Wed, 28 Mar 2018 13:10:00 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/f12-chooser-is-dev-tool-thing/</guid>
      <description>The F12 Chooser is a development tool thing that I like and you should know about if you want your web application or web extension to support Microsoft Edge.
The F12 Developer Tools are pretty great. They are the original in-browser developer tools (included in Internet Explorer 7), and have evolved into something more modern for all us &amp;ldquo;modern&amp;rdquo; developers.
With all in-browser developer tools, I&amp;rsquo;ve found that every once and I come across an application I&amp;rsquo;m trying to debug that is so unstable that F12 can&amp;rsquo;t seem to attache properly.</description>
    </item>
    
    <item>
      <title>Picking between TypeScript and JavaScript</title>
      <link>https://davidwesst.com/blog/typescript-or-javascript/</link>
      <pubDate>Thu, 15 Mar 2018 11:40:00 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/typescript-or-javascript/</guid>
      <description>Which one should you pick: TypeScript or JavaScript? They are both great languages, people always ask me when you should use one or the other. This post puts that to rest.
Whether it&amp;rsquo;s a work project or a personal one, the question &amp;ldquo;TypeScript or JavaScript&amp;rdquo; always seems to come up in my mind. Utlimately, they provide a very similiar function considering that TypeScript is a superset of JavaScript, and compiles down to JavaScript itself.</description>
    </item>
    
    <item>
      <title>Crowdsourcing Documentation is Cool</title>
      <link>https://davidwesst.com/blog/crowdsourcing-docs-is-cool/</link>
      <pubDate>Tue, 13 Mar 2018 09:40:00 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/crowdsourcing-docs-is-cool/</guid>
      <description>The idea of these large enterprises crowdsourcing their technical documentation is pretty cool. More cool than I had originally realized, and I want to take a moment to explain why I like it and why you should get involved yourself.
I updated the Microsoft Edge documentation on web extensions. As of this writing, you can see it here, but just in case you can&amp;rsquo;t I&amp;rsquo;ve included an image.
The idea of these large enterprises crowdsourcing their technical documentation is pretty cool.</description>
    </item>
    
    <item>
      <title>How to Use Global NPM Packages on a VSTS Self-Hosted Build Agent</title>
      <link>https://davidwesst.com/blog/how-to-use-global-npm-packages-on-a-vsts-self-hosted-build-agent/</link>
      <pubDate>Mon, 24 Oct 2016 08:33:01 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/how-to-use-global-npm-packages-on-a-vsts-self-hosted-build-agent/</guid>
      <description>I took a couple of weeks off of blogging to focus on a building my presentation for Deliver. In my spare time, I started tinkering with Visual Studio Team Services, where decided to start by automating the build and release of this blog.
My build script is pretty straight forward. Setup the global dependencies with NPM, setup the local dependencies with NPM, generate the content, and publish the generated assets. This worked in my hosted agent, but not my self-hosted agent.</description>
    </item>
    
  </channel>
</rss>