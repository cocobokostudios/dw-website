<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on David Wesst</title>
    <link>https://davidwesst.com/tags/javascript/</link>
    <description>Recent content in javascript on David Wesst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Mar 2018 13:10:00 +0000</lastBuildDate>
    
	<atom:link href="https://davidwesst.com/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>F12 Chooser is a Dev Tool Thing</title>
      <link>https://davidwesst.com/blog/f12-chooser-is-dev-tool-thing/</link>
      <pubDate>Wed, 28 Mar 2018 13:10:00 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/f12-chooser-is-dev-tool-thing/</guid>
      <description>The F12 Chooser is a development tool thing that I like and you should know about if you want your web application or web extension to support Microsoft Edge.
The F12 Developer Tools are pretty great. They are the original in-browser developer tools (included in Internet Explorer 7), and have evolved into something more modern for all us &amp;ldquo;modern&amp;rdquo; developers.
With all in-browser developer tools, I&amp;rsquo;ve found that every once and I come across an application I&amp;rsquo;m trying to debug that is so unstable that F12 can&amp;rsquo;t seem to attache properly.</description>
    </item>
    
    <item>
      <title>Picking between TypeScript and JavaScript</title>
      <link>https://davidwesst.com/blog/typescript-or-javascript/</link>
      <pubDate>Thu, 15 Mar 2018 11:40:00 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/typescript-or-javascript/</guid>
      <description>Which one should you pick: TypeScript or JavaScript? They are both great languages, people always ask me when you should use one or the other. This post puts that to rest.
Whether it&amp;rsquo;s a work project or a personal one, the question &amp;ldquo;TypeScript or JavaScript&amp;rdquo; always seems to come up in my mind. Utlimately, they provide a very similiar function considering that TypeScript is a superset of JavaScript, and compiles down to JavaScript itself.</description>
    </item>
    
    <item>
      <title>Crowdsourcing Documentation is Cool</title>
      <link>https://davidwesst.com/blog/crowdsourcing-docs-is-cool/</link>
      <pubDate>Tue, 13 Mar 2018 09:40:00 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/crowdsourcing-docs-is-cool/</guid>
      <description>The idea of these large enterprises crowdsourcing their technical documentation is pretty cool. More cool than I had originally realized, and I want to take a moment to explain why I like it and why you should get involved yourself.
I updated the Microsoft Edge documentation on web extensions. As of this writing, you can see it here, but just in case you can&amp;rsquo;t I&amp;rsquo;ve included an image.
The idea of these large enterprises crowdsourcing their technical documentation is pretty cool.</description>
    </item>
    
    <item>
      <title>NVS, the Node Version Manger for Everyone</title>
      <link>https://davidwesst.com/blog/nvs/</link>
      <pubDate>Tue, 15 Aug 2017 12:35:00 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/nvs/</guid>
      <description>Here&amp;rsquo;s another dev thing I use: NVS, a cross-platform Node version manager that works for Windows.
It&amp;rsquo;s no secret that I like JavaScript, which includes Node. The history of Node releases has been fast, furious, and somewhat turbulent which led to a lot of different versions of Node being released. Manually managing the version of Node in you development enviornment is painful, just like it is for Java. For the Linux and Unix people, there was nvm and n, but nothing really comparable for Windows.</description>
    </item>
    
    <item>
      <title>IstanbulJS Code Coverage Reports in VSTS</title>
      <link>https://davidwesst.com/blog/istanbuljs-in-vsts/</link>
      <pubDate>Thu, 03 Aug 2017 12:10:00 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/istanbuljs-in-vsts/</guid>
      <description>Here&amp;rsquo;s another dev thing I use: IstanbulJS in Visual Studio Team Services (VSTS) builds and display the test reports as part of the build reports. When a build completes, I get a report like this one.
I can browse the report right in the build report, and drill into the results for each file.
This is how I did it.
Step 0: Assumptions I&amp;rsquo;m not going to go into the details on how to setup IstanbulJS or a test suite, but you&amp;rsquo;ll need a project with tests and uses the IstanbulJS command line tool, NYC, to run them.</description>
    </item>
    
    <item>
      <title>Mocha Test Reports in VSTS</title>
      <link>https://davidwesst.com/blog/mocha-in-vsts/</link>
      <pubDate>Tue, 01 Aug 2017 11:19:00 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/mocha-in-vsts/</guid>
      <description>Here&amp;rsquo;s another dev thing I use: MochaJS in Visual Studio Team Services (VSTS) builds and display the test reports as part of the build reports. See? Like this.
This wasn&amp;rsquo;t me trying to fit a square peg into a round hole. VSTS is exceptionally flexible and it comes bundled with all the pieces you need to do this out of the box. The key is making sure that we setup our test runner to produce the output VSTS needs.</description>
    </item>
    
    <item>
      <title>Conquest April 2017 Devblog</title>
      <link>https://davidwesst.com/blog/conquest-april-2017-devblog/</link>
      <pubDate>Tue, 02 May 2017 08:31:41 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/conquest-april-2017-devblog/</guid>
      <description>This is the April 2017 update for my video game project I call &amp;ldquo;Conquest&amp;rdquo;.
This month, I have continued to make progress on my game project. The unexpected thing that happened was the fact that I decided to take a step back and do some research and development before continuing forward with the game idea I have in mind.
Status Update Here&amp;rsquo;s the thing: my game project is too big. At least for now, it&amp;rsquo;s too big, and I don&amp;rsquo;t have enough experience and knowledge to be co fortable taking this idea and turning it into a game.</description>
    </item>
    
    <item>
      <title>How to Compile TypeScript into a Single File with SystemJS Modules with Gulp</title>
      <link>https://davidwesst.com/blog/how-to-compile-typescript-into-a-single-file-with-systemjs-modules-with-gulp/</link>
      <pubDate>Tue, 14 Mar 2017 09:47:22 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/how-to-compile-typescript-into-a-single-file-with-systemjs-modules-with-gulp/</guid>
      <description>I&amp;rsquo;ve been messing around with TypeScript again for my game project and wanted a module loader to consume the single file produced by the TypeScript compiler. This time around I decided to use SystemJS and figured I&amp;rsquo;d share the lessons I learned along the way.
Sample Project If you&amp;rsquo;re interested in playing with the code, you can checkout this GitHub project I setup just for that reason.
Previous Post I also posted about doing the same sort of thing with AMD and RequireJS complete with a GitHub sample project</description>
    </item>
    
    <item>
      <title>Initial Thoughts on Using Phaser</title>
      <link>https://davidwesst.com/blog/new-post-initial-thoughts-on-phaser/</link>
      <pubDate>Tue, 07 Mar 2017 06:00:00 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/new-post-initial-thoughts-on-phaser/</guid>
      <description>I&amp;rsquo;m not a game dev, but have always wanted to make a video game. I&amp;rsquo;ve started and stopped so many project over the years, that I have seriously lost count.
With the new year and a fresh mind, I decided to take a stab at it again, this time focusing on just getting something done rather than getting something done right as a sort of side project.
It&amp;rsquo;s been about two months since I&amp;rsquo;ve started, and I have something basic working (although I&amp;rsquo;m not willing to share it yet) and I thought I would share my thoughts on Phaser, the framework I decided to use to help me build my game.</description>
    </item>
    
    <item>
      <title>How to Use Global NPM Packages on a VSTS Self-Hosted Build Agent</title>
      <link>https://davidwesst.com/blog/how-to-use-global-npm-packages-on-a-vsts-self-hosted-build-agent/</link>
      <pubDate>Mon, 24 Oct 2016 08:33:01 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/how-to-use-global-npm-packages-on-a-vsts-self-hosted-build-agent/</guid>
      <description>I took a couple of weeks off of blogging to focus on a building my presentation for Deliver. In my spare time, I started tinkering with Visual Studio Team Services, where decided to start by automating the build and release of this blog.
My build script is pretty straight forward. Setup the global dependencies with NPM, setup the local dependencies with NPM, generate the content, and publish the generated assets. This worked in my hosted agent, but not my self-hosted agent.</description>
    </item>
    
    <item>
      <title>How to Fix node-gyp Error on Windows</title>
      <link>https://davidwesst.com/blog/how-to-fix-node-gyp-error-on-windows/</link>
      <pubDate>Mon, 26 Sep 2016 14:51:56 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/how-to-fix-node-gyp-error-on-windows/</guid>
      <description>I hit this problem once or twice a year and always seem to forget how easy it is to fix the problem. This blog post will ensure that not only I remember, but the entire Internet will remember the solution I use.
Here goes.
The Problem The problem is simple: You pull down a repository that uses NPM for package management onto your Windows machine, you type npm install and you get something like this:</description>
    </item>
    
    <item>
      <title>How to Build ReactJS with Gulp</title>
      <link>https://davidwesst.com/blog/how-to-build-reactjs-with-gulp/</link>
      <pubDate>Mon, 19 Sep 2016 19:55:48 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/how-to-build-reactjs-with-gulp/</guid>
      <description>I wanted to play with ReactJS last week and figured I would just add another gulp talk to my build process, being that it&amp;rsquo;s all the rage right now.
It turns out that it wasn&amp;rsquo;t that simple, as it turns out that the gulp-react has been &amp;ldquo;deprecated in favor of gulp-babel&amp;rdquo;. I hadn&amp;rsquo;t planned on learning Babel, but it turns out it wasn&amp;rsquo;t very difficult once I was able to put all the pieces together.</description>
    </item>
    
    <item>
      <title>How to Compile Typescript into a Single File with AMD Modules with Gulp</title>
      <link>https://davidwesst.com/blog/typescript-with-amd-and-gulp/</link>
      <pubDate>Mon, 12 Sep 2016 08:25:01 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/typescript-with-amd-and-gulp/</guid>
      <description>I&amp;rsquo;ve been tinkering with TypeScript lately and was trying to setup my project to compile all of my modules into a single file, which would then be used in an HTML page. Maybe this is obvious to the more experienced TypeScript developer, but I had made a number of false assumptions while trying to get this to work.
This post will walk you through what I did to setup my build and get it working in an HTML page.</description>
    </item>
    
    <item>
      <title>How to Use Highlight.Js with Bower and Gulp</title>
      <link>https://davidwesst.com/blog/how-to-use-highlight-js-with-bower-and-gulp/</link>
      <pubDate>Mon, 29 Aug 2016 10:07:11 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/how-to-use-highlight-js-with-bower-and-gulp/</guid>
      <description>One of the challenges I faced when getting my new blog theme up and running was getting highlight.js working as I wanted it to. The library has support for a riduculous number of languages, and provides theming capabilities, so it was the clear choice when it came to syntax highlighting for the web. The challenge is that tt&amp;rsquo;s not just adding simple script tag and you&amp;rsquo;re done with it. They seem to expect you to know what you&amp;rsquo;re doing when consuming the library.</description>
    </item>
    
    <item>
      <title>JavaScript Framework or JavaScript Core (Part 2)</title>
      <link>https://davidwesst.com/blog/javascript-framework-or-javascript-core-part-2/</link>
      <pubDate>Mon, 22 Feb 2016 15:34:46 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/javascript-framework-or-javascript-core-part-2/</guid>
      <description>A friend and I decided to make a video game using JavaScript.
When deciding on whether or not to use a JavaScript game framework I went with Phaser, and Chris opted to go with pure JavaScript.
We were both right.
In this series of posts, I want to explain how each of us answer the question: Should I use a JavaScript Framework or pure JavaScript?
This is part 2 of 2 in the series.</description>
    </item>
    
    <item>
      <title>JavaScript Framework or JavaScript Core (Part 1)</title>
      <link>https://davidwesst.com/blog/javascript-framework-or-javascript-core-part-1/</link>
      <pubDate>Tue, 16 Feb 2016 15:34:46 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/javascript-framework-or-javascript-core-part-1/</guid>
      <description>A friend and I decided to make a video game using JavaScript.
When deciding on whether or not to use a JavaScript game framework I went with Phaser, and Chris opted to go with pure JavaScript.
We were both right.
In this series of posts, I want to explain how each of us answer the question: Should I use a JavaScript Framework or pure JavaScript?
This is part 1 of 2 in the series.</description>
    </item>
    
    <item>
      <title>Exploring JavaScript Game Frameworks</title>
      <link>https://davidwesst.com/blog/exploring-javascript-game-frameworks/</link>
      <pubDate>Mon, 08 Feb 2016 16:11:44 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/exploring-javascript-game-frameworks/</guid>
      <description>Last month I explored a number of JavaScript-based game frameworks in an attempt to pick the perfect one for my first game.
I thought I&amp;rsquo;d take a moment to share four of them that really stood out to me, along with a few honerable mentions.
Note that I&amp;rsquo;ve left a bunch off the list, as that is the nature of a &amp;ldquo;top X&amp;rdquo; list. If I missed your favourite one, then feel free to let me know in the comments!</description>
    </item>
    
    <item>
      <title>Service Workers and PWAs are Super Cool</title>
      <link>https://davidwesst.com/blog/websummit-pwa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/websummit-pwa/</guid>
      <description>This is part of a series of posts capturing the highlights from my experience at the Microsoft Edge Web Summit 2017
One of the core items highlighted by the Microsoft Edge team, along with many others who were just web professionals, was the importance of Progressive Web Apps (PWAs). I started out thinking they were something that could be interesting one day, but left the conference convinced that this will change the way we think of the web.</description>
    </item>
    
  </channel>
</rss>