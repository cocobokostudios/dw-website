<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>powershell on David Wesst</title>
    <link>https://davidwesst.com/tags/powershell/</link>
    <description>Recent content in powershell on David Wesst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Aug 2017 10:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://davidwesst.com/tags/powershell/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Posh-GVM, the Groovy Version Manager for Powershell</title>
      <link>https://davidwesst.com/blog/posh-gvm/</link>
      <pubDate>Thu, 17 Aug 2017 10:00:00 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/posh-gvm/</guid>
      <description>Here&amp;rsquo;s another dev thing I use: Posh-GVM, a Groovy version manager that works for Windows.
You remember Groovy right? The language that was all the rage at some point with Groovy on Grails?
All kidding aside, in my adventures as an enterprise JDK developer, I&amp;rsquo;ve come across a number of Groovy on Grails applications. These projects tend to span multiple versions of Grails, ranging from 2.3.x which works on older versions of Tomcat, upto 3.</description>
    </item>
    
    <item>
      <title>Jabba, the Java Version Manager for Everyone</title>
      <link>https://davidwesst.com/blog/jabba/</link>
      <pubDate>Wed, 16 Aug 2017 09:35:00 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/jabba/</guid>
      <description>Here&amp;rsquo;s another dev thing I use: Jabba, a cross-platform Java version manager that works for Windows.
Over the the past few years, I&amp;rsquo;ve been doing JDK-based development in an enterprise Windows environment. In that time, I&amp;rsquo;ve continually struggled with being able to easily switch between versions of Java on my machine, depending on the project. We have legacy application that run old Java, and modern applications that run newer versions of Java.</description>
    </item>
    
    <item>
      <title>NVS, the Node Version Manger for Everyone</title>
      <link>https://davidwesst.com/blog/nvs/</link>
      <pubDate>Tue, 15 Aug 2017 12:35:00 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/nvs/</guid>
      <description>Here&amp;rsquo;s another dev thing I use: NVS, a cross-platform Node version manager that works for Windows.
It&amp;rsquo;s no secret that I like JavaScript, which includes Node. The history of Node releases has been fast, furious, and somewhat turbulent which led to a lot of different versions of Node being released. Manually managing the version of Node in you development enviornment is painful, just like it is for Java. For the Linux and Unix people, there was nvm and n, but nothing really comparable for Windows.</description>
    </item>
    
    <item>
      <title>Windows Not Required - The New Microsoft Development Story (Video)</title>
      <link>https://davidwesst.com/blog/windows-not-required-video/</link>
      <pubDate>Mon, 03 Oct 2016 10:47:31 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/windows-not-required-video/</guid>
      <description>This is a recording of my recent Winnipeg .NET User Group talk about using Microsoft tools without requiring Windows.
It&amp;rsquo;s not the most technical as I go over a ton of topics, at high level, ranging from development tools, to applications. Still, I find this stuff really interesting and hopefully you enjoy it too.
You can view the slides here and find their source code here on GitHub.</description>
    </item>
    
  </channel>
</rss>