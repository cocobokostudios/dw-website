<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>systemjs on David Wesst</title>
    <link>https://davidwesst.com/tags/systemjs/</link>
    <description>Recent content in systemjs on David Wesst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Mar 2017 09:47:22 +0000</lastBuildDate>
    
	<atom:link href="https://davidwesst.com/tags/systemjs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Compile TypeScript into a Single File with SystemJS Modules with Gulp</title>
      <link>https://davidwesst.com/blog/how-to-compile-typescript-into-a-single-file-with-systemjs-modules-with-gulp/</link>
      <pubDate>Tue, 14 Mar 2017 09:47:22 +0000</pubDate>
      
      <guid>https://davidwesst.com/blog/how-to-compile-typescript-into-a-single-file-with-systemjs-modules-with-gulp/</guid>
      <description>I&amp;rsquo;ve been messing around with TypeScript again for my game project and wanted a module loader to consume the single file produced by the TypeScript compiler. This time around I decided to use SystemJS and figured I&amp;rsquo;d share the lessons I learned along the way.
Sample Project If you&amp;rsquo;re interested in playing with the code, you can checkout this GitHub project I setup just for that reason.
Previous Post I also posted about doing the same sort of thing with AMD and RequireJS complete with a GitHub sample project</description>
    </item>
    
  </channel>
</rss>