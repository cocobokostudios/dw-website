{"version":3,"sources":["webpack://dw-website/./src/components/categories.js","webpack://dw-website/./src/components/post-list.js","webpack://dw-website/./src/components/tags.js","webpack://dw-website/./src/pages/blog.js"],"names":["categories","map","category","Category","key","Link","to","str","match","x","toLowerCase","join","styled","PostList","posts","frontmatter","fields","excerpt","timeToRead","title","tags","date","description","slug","PostListItem","StyledPostList","StyledPostListItem","PostListTitle","PostListExcerpt","dangerouslySetInnerHTML","__html","PostListMeta","StyledTags","tag","Tag","data","allMarkdownRemark","nodes","HeaderWrapper","StyledMetaLinks"],"mappings":"oLA0BA,EAfmB,SAAC,GAAoB,IAAlBA,EAAiB,EAAjBA,WACpB,OACE,2BACGA,GACCA,EAAWC,KAAI,SAACC,GACd,OACE,gBAACC,EAAD,CAAUC,IAAKF,GACb,gBAAC,EAAAG,KAAD,CAAMC,GAAE,gBAdDC,EAc8BL,EAb1CK,EACJC,MAAM,sEACNP,KAAI,SAACQ,GAAD,OAAOA,EAAEC,iBACbC,KAAK,OAUuDT,IAd7C,IAACK,OAwBfJ,EAAWS,qBAAH,+DAAGA,CAAH,4UCCd,EAvBiB,YAAgB,IACzBC,EADwB,EAAZC,MACKb,KAAI,YAAmD,IAAhDc,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAClDC,EAA+CJ,EAA/CI,MAAOC,EAAwCL,EAAxCK,KAAMpB,EAAkCe,EAAlCf,WAAYqB,EAAsBN,EAAtBM,KAAMC,EAAgBP,EAAhBO,YAC/BC,EAASP,EAATO,KAER,OACE,gBAACC,EAAD,CACEpB,IAAKmB,EACLH,KAAMA,EACNpB,WAAYA,EACZmB,MAAOA,EACPE,KAAMA,EACNE,KAAMA,EACNL,WAAYA,EACZI,YAAaA,EACbL,QAASA,OAKf,OAAO,gBAACQ,EAAD,KAAiBZ,IAKpBW,EAAe,SAAC,GASf,IARLL,EAQI,EARJA,MACAE,EAOI,EAPJA,KACAH,EAMI,EANJA,WACAE,EAKI,EALJA,KACApB,EAII,EAJJA,WACAiB,EAGI,EAHJA,QACAK,EAEI,EAFJA,YACAC,EACI,EADJA,KAEA,OACE,gBAACG,EAAD,KACE,gBAAC,EAAD,CAAY1B,WAAYA,IAExB,gBAAC2B,EAAD,KACE,gBAAC,EAAAtB,KAAD,CAAMC,GAAIiB,GAAOJ,IAEnB,gBAACS,EAAD,CACEC,wBAAyB,CACvBC,OAAQR,GAAeL,KAI3B,gBAAC,IAAD,CAAMG,KAAMA,IACZ,gBAACW,EAAD,KACE,4BAAOV,GACP,4BAAOH,EAAP,YAMFO,EAAiBb,mBAAH,qEAAGA,CAAH,yMAedc,EAAqBd,mBAAH,yEAAGA,CAAH,wTAqBlBe,EAAgBf,mBAAH,oEAAGA,CAAH,4OAuBbgB,EAAkBhB,kBAAH,sEAAGA,CAAH,gDAKfmB,EAAenB,oBAAH,mEAAGA,CAAH,4F,iECrGlB,IAfa,SAAC,GAAc,IAAZQ,EAAW,EAAXA,KACd,OACE,gBAACY,EAAD,KACGZ,GACCA,EAAKnB,KAAI,SAACgC,GACR,OACE,gBAACC,EAAD,CAAK9B,IAAK6B,GACR,gBAAC,EAAA5B,KAAD,CAAMC,GAAE,UAdDC,EAcwB0B,EAbpC1B,EACJC,MAAM,sEACNP,KAAI,SAACQ,GAAD,OAAOA,EAAEC,iBACbC,KAAK,OAU4CsB,IAdlC,IAAC1B,OAwBrB,IAAM2B,EAAMtB,qBAAH,iDAAGA,CAAH,yUAsBHoB,EAAapB,oBAAH,wDAAGA,CAAH,yF,sbCNhB,UAtCa,SAAC,GAAc,IACpBE,EADmB,EAAXqB,KACKC,kBAAkBC,MAErC,OACE,gBAAC,IAAD,CAAQlB,MAAM,QACZ,gBAACmB,EAAD,KACE,kCAEA,gBAACC,EAAD,KACE,mBAOEjC,GAAG,SAPL,iBAWA,mBAMEA,GAAG,eANL,yBAaJ,gBAAC,IAAD,CAAUQ,MAAOA,MAOvB,IAAMwB,EAAgB1B,oBAAH,+DAAGA,CAAH,qHAWb2B,EAAkB3B,oBAAH,iEAAGA,CAAH","file":"component---src-pages-blog-js-0695407982e64bc599f1.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst toKebabCase = (str) => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join('-');\n};\n\nconst Categories = ({ categories }) => {\n  return (\n    <div>\n      {categories &&\n        categories.map((category) => {\n          return (\n            <Category key={category}>\n              <Link to={`/categories/${toKebabCase(category)}`}>{category}</Link>\n            </Category>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Categories;\n\nconst Category = styled.span`\n  margin-right: 0.6rem;\n  margin-bottom: 0.6rem;\n  text-transform: uppercase;\n  font-size: var(--size-300);\n\n  & a {\n    position: relative;\n    z-index: 2;\n    background-color: rgba(255, 255, 255, 0.7);\n    text-decoration: none;\n    color: inherit;\n    padding: 0.2rem 0.6rem;\n    border: 1px solid rgba(255, 255, 255, 1);\n    border-radius: 4px;\n  }\n\n  & a:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport Tags from './tags';\nimport Categories from './categories';\n\nconst PostList = ({ posts }) => {\n  const PostList = posts.map(({ frontmatter, fields, excerpt, timeToRead }) => {\n    const { title, tags, categories, date, description } = frontmatter;\n    const { slug } = fields;\n\n    return (\n      <PostListItem\n        key={slug}\n        tags={tags}\n        categories={categories}\n        title={title}\n        date={date}\n        slug={slug}\n        timeToRead={timeToRead}\n        description={description}\n        excerpt={excerpt}\n      />\n    );\n  });\n\n  return <StyledPostList>{PostList}</StyledPostList>;\n};\n\nexport default PostList;\n\nconst PostListItem = ({\n  title,\n  date,\n  timeToRead,\n  tags,\n  categories,\n  excerpt,\n  description,\n  slug,\n}) => {\n  return (\n    <StyledPostListItem>\n      <Categories categories={categories} />\n\n      <PostListTitle>\n        <Link to={slug}>{title}</Link>\n      </PostListTitle>\n      <PostListExcerpt\n        dangerouslySetInnerHTML={{\n          __html: description || excerpt,\n        }}\n      />\n\n      <Tags tags={tags} />\n      <PostListMeta>\n        <span>{date}</span>\n        <span>{timeToRead} mins</span>\n      </PostListMeta>\n    </StyledPostListItem>\n  );\n};\n\nconst StyledPostList = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: grid;\n  justify-items: center;\n  grid-gap: var(--size-600);\n  grid-template-columns: repeat(auto-fit, minmax(35ch, 1fr));\n\n  @media screen and (max-width: 500px) {\n    & {\n      display: block;\n    }\n  }\n`;\n\nconst StyledPostListItem = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 1.5rem;\n  border: 1px solid rgba(255, 255, 255, 0.5);\n  background-color: rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  border-radius: 8px;\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n\n  @media screen and (max-width: 500px) {\n    & {\n      margin-top: var(--size-600);\n    }\n  }\n`;\n\nconst PostListTitle = styled.h2`\n  line-height: 1.2;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  text-transform: capitalize;\n  font-size: var(--size-600);\n  font-weight: 700;\n\n  & a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  & a::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n`;\n\nconst PostListExcerpt = styled.p`\n  margin-top: auto;\n  font-size: var(--size-400);\n`;\n\nconst PostListMeta = styled.div`\n  margin-top: 2rem;\n\n  font-size: var(--size-300);\n  display: flex;\n  justify-content: space-between;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst toKebabCase = (str) => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join('-');\n};\n\nconst Tags = ({ tags }) => {\n  return (\n    <StyledTags>\n      {tags &&\n        tags.map((tag) => {\n          return (\n            <Tag key={tag}>\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\n            </Tag>\n          );\n        })}\n    </StyledTags>\n  );\n};\n\nexport default Tags;\n\nconst Tag = styled.span`\n  margin-top: 0.3rem;\n  margin-bottom: 0.3rem;\n  text-transform: uppercase;\n  font-size: var(--size-300);\n\n  & a {\n    position: relative;\n    z-index: 2;\n    background-color: rgba(68, 100, 173, 0.4);\n    text-decoration: none;\n    padding: 0.2rem 0.2rem;\n    color: inherit;\n    border: 1px solid rgba(255, 255, 255, 1);\n    border-radius: 4px;\n  }\n\n  & a:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n`;\n\nconst StyledTags = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin-top: 2rem;\n  margin-bottom; 2rem;\n`","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Layout from '../components/layout';\nimport PostList from '../components/post-list';\nimport styled from 'styled-components';\n\nconst Blog = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes;\n\n  return (\n    <Layout title=\"Blog\">\n      <HeaderWrapper>\n        <h1>Blog</h1>\n\n        <StyledMetaLinks>\n          <Link\n            css={`\n              margin-top: var(--size-400);\n              margin-right: 1rem;\n              color: inherit;\n              text-transform: uppercase;\n            `}\n            to=\"/tags\"\n          >\n            view all tags\n          </Link>\n          <Link\n            css={`\n              margin-top: var(--size-400);\n              color: inherit;\n              text-transform: uppercase;\n            `}\n            to=\"/categories\"\n          >\n            view all categories\n          </Link>\n        </StyledMetaLinks>\n      </HeaderWrapper>\n\n      <PostList posts={posts} />\n    </Layout>\n  );\n};\n\nexport default Blog;\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: var(--size-900);\n  margin-bottom: var(--size-700);\n\n  h1 {\n    max-width: none;\n  }\n`;\n\nconst StyledMetaLinks = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nexport const homePageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { contentType: { eq: \"posts\" } } }\n      sort: { order: DESC, fields: frontmatter___date }\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        excerpt\n        timeToRead\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n          title\n          tags\n          categories\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}