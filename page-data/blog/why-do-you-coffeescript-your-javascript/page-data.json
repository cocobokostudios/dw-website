{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/why-do-you-coffeescript-your-javascript/","result":{"data":{"markdownRemark":{"html":"<p>I was asked this the other day: Why don't you just write your code in JavaScript directly? As in, why would you use a langugage that abstracts JavaScript, which  doesn't require compiliation?</p>\n<p><img src=\"coffeescript-logo.png\"></p>\n<p>That second question is also the answer: I <em>want</em> a compiler, because a compiler can optimize my code.</p>\n<h3>For Example</h3>\n<p>Remember our script from the <a href=\"http://davidwesst.com/why-do-i-javascript/\">last post</a>? Well, let's see that same thing in <a href=\"http://coffeescript.org\">CoffeeScript</a>.</p>\n<p><a href=\"http://jsbin.com/codizu/1/embed?js,console\">JS Bin</a><script src=\"http://static.jsbin.com/js/embed.js\"></script></p>\n<p>Now I can compile it and get optimal JavaScript. </p>\n<p><code>coffee myfile.coffee --compile</code></p>\n<p>I don't need to worry about the nuiances of the language syntax nor what \"optimal\" means for JavaScript. There is a <a href=\"https://github.com/jashkenas/coffeescript\">whole community</a> of people worrying about it for me which is put into the compiler.</p>\n<p>Plus, like I <a href=\"http://davidwesst.com/why-do-i-javascript/\">said in the last post</a>, JavaScript doesn't really look like other languages. Sure, it's easy once you get used to it, but so is eating broken glass. </p>\n<p>I have a background in C# which is more of a so-called \"traditional\" OO language, like Java, which I find easier to read.</p>\n<p>CoffeeScript, although definitely not like C#, is easier for me read though and understand. The more I worked with it, the easier it became as the whitespace worked in my favour. Plus, I hear people that like indentation languages like VB.NET or Ruby, think CoffeeScript feels familiar**.</p>\n<p><small>**When I say \"I hear\", refers to of some of the anecdotal I have had over the past couple of years with collegues. So take that as you will.</small></p>\n<h4>But JavaScript Has \"Normal\" Class Definitions and Stuff</h4>\n<p>You're right...in the <a href=\"http://wiki.ecmascript.org/doku.php?do=show&#x26;id=harmony%3Aspecification_drafts#current_working_draft\">ES6 standard</a>. Plus, property modifiers kinda go hand-in-hand with class defintions and that is expected in ES7. </p>\n<p>I want to support platforms that are out <em>now</em>, not next year or the year after. These platforms came out before that spec, and so they don't support it. I'd have to use a compiler that abstracts me away from how JavaScript actually works just so I can use language features that will eventually be in CoffeeScript anyway.</p>\n<p>Since...  </p>\n<blockquote>\n<p>\"The golden rule of CoffeeScript is: \"It's just JavaScript\" - <a href=\"http://coffeescript.org\">Coffeescript.org</a></p>\n</blockquote>\n<p>...I don't learn to use features that don't already exist JavaScript. When the compiler supports ES6 JavaScript, the new (more traditional) keywords will be supported there too. </p>\n<p>Not that I think abstraction languages that do that are bad (e.g. <a href=\"http://www.typescriptlang.org/\">TypeScript</a>), but I think that CoffeeScript is a nice medium that teaches me JavaScript functionality, with a simpler syntax, while giving me tools that make cleaning up and optimizing my code easy.</p>\n<h5>For example...</h5>\n<p>The IE team <a href=\"http://blogs.msdn.com/b/ie/archive/2014/09/18/updates-to-our-platform-roadmap.aspx\">recently announced the support</a> of ES6 features that are \"In Development\".</p>\n<p>Internet Explorer is something of a major player on the web, so I probably want to support those users too.</p>\n<p><img src=\"ielogo-blue.png\"></p>\n<h3>The Point</h3>\n<p>I like CoffeeScript because it still allows me to learn the features JavaScript, while giving me a compiler to write optimal JavaScript, along with a simpler, cleaner syntax, in my opinion.</p>\n<p>This is definitely more of a preference when coding JavaScript and isn't really necessary. I just find that writing CS versus JS was just more intuitive with my background.</p>\n<p>Thanks for Playing. ~ DW</p>","frontmatter":{"title":"Why do you CoffeeScript your JavaScript?"}}},"pageContext":{"slug":"/why-do-you-coffeescript-your-javascript/"}},"staticQueryHashes":["3159585216"]}