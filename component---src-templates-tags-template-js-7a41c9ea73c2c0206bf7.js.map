{"version":3,"sources":["webpack://dw-website/./src/components/categories.js","webpack://dw-website/./src/components/post-list.js","webpack://dw-website/./src/components/styled-link.js","webpack://dw-website/./src/components/tags.js","webpack://dw-website/./src/templates/tags-template.js"],"names":["categories","showLabel","CategoriesLabel","map","category","Category","key","Link","to","str","match","x","toLowerCase","join","styled","PostList","posts","frontmatter","fields","excerpt","timeToRead","title","tags","date","description","slug","PostListItem","StyledPostList","StyledPostListItem","PostListTitle","PostListExcerpt","dangerouslySetInnerHTML","__html","PostListMeta","StyledLink","StyledTags","TagsLabel","tag","Tag","pageContext","data","totalCount","allMarkdownRemark","nodes","TagsTemplateWrapper","Title"],"mappings":"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","file":"component---src-templates-tags-template-js-7a41c9ea73c2c0206bf7.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst toKebabCase = (str) => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join('-');\n};\n\nconst getLabel = () => {\n  return (\n    <CategoriesLabel>Categorized under </CategoriesLabel>\n  )\n}\n\nconst Categories = ({ categories, showLabel }) => {\n  return (\n    <div>\n      {showLabel ? getLabel() : '' }\n      {categories &&\n        categories.map((category) => {\n          return (\n            <Category key={category}>\n              <Link to={`/categories/${toKebabCase(category)}`}>{category}</Link>\n            </Category>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Categories;\n\nconst Category = styled.span`\n  margin-right: 0.6rem;\n  margin-bottom: 0.6rem;\n  text-transform: uppercase;\n  font-size: var(--size-300);\n\n  & a {\n    position: relative;\n    z-index: 2;\n    background-color: rgba(255, 255, 255, 0.7);\n    text-decoration: none;\n    color: inherit;\n    padding: 0.2rem 0.6rem;\n    border: 1px solid rgba(255, 255, 255, 1);\n    border-radius: 4px;\n  }\n\n  & a:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n`;\n\nconst CategoriesLabel = styled.span`\n  margin-right: 0.25rem;\n  vertical-align: middle;\n`\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport Tags from './tags';\nimport Categories from './categories';\n\nconst PostList = ({ posts }) => {\n  const PostList = posts.map(({ frontmatter, fields, excerpt, timeToRead }) => {\n    const { title, tags, categories, date, description } = frontmatter;\n    const { slug } = fields;\n\n    return (\n      <PostListItem\n        key={slug}\n        tags={tags}\n        categories={categories}\n        title={title}\n        date={date}\n        slug={slug}\n        timeToRead={timeToRead}\n        description={description}\n        excerpt={excerpt}\n      />\n    );\n  });\n\n  return <StyledPostList>{PostList}</StyledPostList>;\n};\n\nexport default PostList;\n\nconst PostListItem = ({\n  title,\n  date,\n  timeToRead,\n  tags,\n  categories,\n  excerpt,\n  description,\n  slug,\n}) => {\n  return (\n    <StyledPostListItem>\n      <Categories categories={categories} />\n\n      <PostListTitle>\n        <Link to={slug}>{title}</Link>\n      </PostListTitle>\n      <PostListExcerpt\n        dangerouslySetInnerHTML={{\n          __html: description || excerpt,\n        }}\n      />\n\n      <Tags tags={tags} />\n      <PostListMeta>\n        <span>{date}</span>\n        <span>{timeToRead} mins</span>\n      </PostListMeta>\n    </StyledPostListItem>\n  );\n};\n\nconst StyledPostList = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: grid;\n  justify-items: center;\n  grid-gap: var(--size-600);\n  grid-template-columns: repeat(auto-fit, minmax(35ch, 1fr));\n\n  @media screen and (max-width: 500px) {\n    & {\n      display: block;\n    }\n  }\n`;\n\nconst StyledPostListItem = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 1.5rem;\n  border: 1px solid rgba(255, 255, 255, 0.5);\n  background-color: rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  border-radius: 8px;\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n\n  @media screen and (max-width: 500px) {\n    & {\n      margin-top: var(--size-600);\n    }\n  }\n`;\n\nconst PostListTitle = styled.h2`\n  line-height: 1.2;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  text-transform: capitalize;\n  font-size: var(--size-600);\n  font-weight: 700;\n\n  & a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  & a::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n`;\n\nconst PostListExcerpt = styled.p`\n  margin-top: auto;\n  font-size: var(--size-400);\n`;\n\nconst PostListMeta = styled.div`\n  margin-top: 2rem;\n\n  font-size: var(--size-300);\n  display: flex;\n  justify-content: space-between;\n`;\n","import { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  padding: 0.5rem;\n  padding-left: 1.5rem;\n  padding-right: 1.5rem;\n  color: inherit;\n  background-color: rgba(255, 255, 255, 0.4);\n  text-decoration: none;\n  border-radius: 0px;\n  border: 1px solid rgba(255, 255, 255, 0.8);\n  text-transform: uppercase;\n  border-radius: 4px;\n`;\n\nexport default StyledLink;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst toKebabCase = (str) => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join('-');\n};\n\nconst getLabel = () => {\n  return (\n    <TagsLabel>Tagged with</TagsLabel>\n  )\n}\n\nconst Tags = ({ tags, showLabel }) => {\n  return (\n    <StyledTags> \n      {showLabel ? getLabel() : ''}\n      {tags &&\n        tags.map((tag) => {\n          return (\n            <Tag key={tag}>\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\n            </Tag>\n          );\n        })}\n    </StyledTags>\n  );\n};\n\nexport default Tags;\n\nconst Tag = styled.span`\n  margin-top: 0.3rem;\n  margin-bottom: 0.3rem;\n  text-transform: uppercase;\n  font-size: var(--size-300);\n\n  & a {\n    position: relative;\n    z-index: 2;\n    background-color: rgba(68, 100, 173, 0.4);\n    text-decoration: none;\n    padding: 0.2rem 0.2rem;\n    color: inherit;\n    border: 1px solid rgba(255, 255, 255, 1);\n    border-radius: 4px;\n  }\n\n  & a:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n`;\n\nconst StyledTags = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n`\nconst TagsLabel = styled.span`\n  margin-right: 0.25rem;\n  vertical-align: middle;\n`","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport PostList from '../components/post-list';\nimport StyledLink from '../components/styled-link';\nimport styled from 'styled-components';\n\nconst TagsTemplate = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { totalCount } = data.allMarkdownRemark;\n  const posts = data.allMarkdownRemark.nodes;\n  const title = `Posts tagged ${tag}`;\n\n  return (\n    <Layout title={title}>\n      <TagsTemplateWrapper>\n        <Title>\n          {totalCount} posts tagged \"{tag}\"\n        </Title>\n        <Link\n          css={`\n            margin-top: var(--size-400);\n            display: inline-block;\n            color: inherit;\n            text-transform: uppercase;\n          `}\n          to=\"/tags\"\n        >\n          view all tags\n        </Link>\n        <PostList posts={posts} />\n\n        <StyledLink\n          css={`\n            margin-top: var(--size-400);\n            display: inline-block;\n          `}\n          to=\"/tags\"\n        >\n          View All tags\n        </StyledLink>\n      </TagsTemplateWrapper>\n    </Layout>\n  );\n};\n\nexport default TagsTemplate;\n\nconst TagsTemplateWrapper = styled.div`\n  padding-top: var(--size-900);\n`;\n\nconst Title = styled.h1`\n  font-size: var(--size-700);\n`;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { tags: { in: [$tag] } }\n        fields: { contentType: { eq: \"posts\" } }\n      }\n    ) {\n      totalCount\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n          tags\n          title\n        }\n        timeToRead\n        excerpt\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}